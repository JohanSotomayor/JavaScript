CURSO JAVASCRIPT


DEFINICION:Lenguaje construido bajo un aparadigma de objectos, asincronico (solo realiza una ejecicion al timpo)

ETAPA DE COMPILACION
LENGUAJES DINAMICOS: Son aquellos que no necesitan se compilados para ser interpretado
LENGUAJES ESTATICOS: Necesitan ser compilados ha codigo binario para ser interpretados por la maquina

ETAPA RUNTIME
LENGUAJES INTERPRETADOS: Son aquellos que son leidos secuencialmente linea por linea no el codigo completo

ENGINE JAVASCRIPT: Motor que interpreta JS a lenguaje Binario para reconocimiento del PC (Integrado en el navegador) el mas conocido el V8 de Google Chrome muy utilizado por 
brindar un alto performance y estabilidad

TIPOS DE DATOS: debilmente tipado
VAR*

LECTURA DE VARIABLES
SCOPE: Es el alcanze que tiene una variable declarada o inicializada GLOBAL si se incializa fuera de una funcion sirve en todo el codigo LOCAL Se inicializa dentro de una funcion y solo es leia dentro de ella

HOISTING: procesamiento de las variables y funciones antes de la ejecucion del codigo, estas leen y se deben declarar primero antes de llamarlas (Afecta las KeyWords  VAR - FUNCTION)

COECION: Es la conversion de las variables pueden ser IMPLICITAS (interpretadas por la maquina) o EXPLICITAS(realizando cambio de su tipo de dato por medio de una funcion)

OPERADORES
TRUE FALSE (=="Toma el valor") (==="compara tipo de dato y valor")

IF ELSE
SWITCH
 TERNARIO: Reemplaza el IF y ELSE 

EVENT LOOP
 CALLSTACK
- Estructura de pila, son las tareas(funciones) que ejecuta JS empezando por GlobalThis y por la funcion llamada, al terminar su ejecuion sale de la pila, asi siempre sale el ultimo secuencialmente, hasta solo volver a quedar en GlobaThis
CALLBACK
-  Cola de tareas dentro del event loop, esperan a que el Callstack ejecute las funciones llamadas para poder ejecutarse, normalmente son funciones pasadas como parametros en otras funciones y siendo utilizadas dentro de otras funciones
 MEMORY HEAP 
- Memoria de collecion o de monton esta alamcena los datos (variables o funciondes) dentro del programa, ejemplo= al inicilizar una variable esta guarda su valor, si cambia el valor de esa variable mas adelante el memory heap borra el valor anterior y deja el nuevo

GARBAGE COLECTOR
- limpia la memory heap de las variables o informacion que ya no estamos utilizando (como una variable renombrada, su valor anterior es sweep osea barrido)


